

# configurations to test the performance of the chatApp application
# they should take no more than 5 minutes

[Config TestChat2Nodes] 

# this configuration is used to test the static properties of the 
# traffic data, that should correspond to data from known papers:
#  Planetary-scale views on a large instant-messaging network
#  Understanding Instant Messaging Traffic Characteristics
# the scale factors are adjusted in order to have a realistic statistic
# compared to the duration of the simulation, average of 
#  one session initiated every 500s
#  session duration of around 500s
#  message length around 90B
# check with istograms in Anf file

description = "2 nodes with chat application"
*.numHosts = ${nn = 2}
sim-time-limit = 3000000s # this must be long or you wan't have enough sessions to make statistics! 
repeat = 1
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
#debug-on-errors = true

**.debug = false
**.coreDebug = false
**.host*.**.channelNumber = 0

# mobility
**.mobility.initFromDisplayString = false
**.host[0].mobility.initialX = 10m
**.host[0].mobility.initialY = 10m
**.host[1].mobility.initialX = 20m
**.host[1].mobility.initialY = 20m

**.host[*].udpApp[0].typename = "ChatApp"
**.host[*].numUdpApps = 1
**.host[*].udpApp[0].debugStats = true


**.host[*].udpApp[0].localPort = 1234
**.host[*].udpApp[0].destPort = 1234

# real values, for long simulations, default in NED
#**.host[*].udpApp[0].messageLength = weibull(100B,2.5B)
#**.host[*].udpApp[0].messageFreq = weibull(30s,1s) # 30s is the scale, 1s is the shape (30 is the order of magnitude of the median)
#**.host[*].udpApp[0].chooseDestAddrMode = "perBurst"
#**.host[*].udpApp[0].burstDuration = pareto_shifted(2.7,300s,0s)
#**.host[*].udpApp[0].burstInterval = pareto_shifted(0.53,300s,0s)

**.host[*].udpApp[0].stopTime = 3000000s
**.host[*].udpApp[0].startTime = uniform(30s,35s)
**.host[*].udpApp[0].delayLimit = 5s
**.host[*].udpApp[0].ChooseDestAddrMode = "perBurst"


[Config TestChatNNodes] 

# test for multi-sessions chats. Each node starts a few sessions 
# to random destinations. Check that the number of total 
# startedSessions is around the same of answeredSessions (in rare cases
# a very long started session may trigger more than one answer, depends on 
# graceTime const in the code)  
 
description = "10 nodes with chat application, shorter simulation"
*.numHosts = ${nn = 10}
sim-time-limit = 1500s
repeat = 1
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
#debug-on-errors = true

**.constraintAreaWidth = 100m
**.constraintAreaHeight = 100m
**.debug = false
**.coreDebug = false

# mobility
**.mobility.initFromDisplayString = false

**.host[*].udpApp[0].typename = "ChatApp"
**.host[*].numUdpApps = 1

#**.host[0].udpApp[0].destAddresses = "255.255.255.255"
**.host[*].udpApp[0].localPort = 1234
**.host[*].udpApp[0].destPort = 1234
**.host[*].udpApp[0].debugStats = true

# fake values, for short simulations
**.host[*].udpApp[0].messageLength = weibull(100B,2.5B)
**.host[*].udpApp[0].messageFreq = weibull(3s,1s) # 3s is the scale, 1s is the shape (30 is the order of magnitude of the median)
**.host[*].udpApp[0].chooseDestAddrMode = "perBurst"
# the following values do not fit the paper as default ones, but are
# compatible with the simulation time  
**.host[*].udpApp[0].burstDuration = pareto_shifted(2.7,30s,0s)
**.host[*].udpApp[0].burstInterval = pareto_shifted(1,30s,0s) 
**.host[*].udpApp[0].intervalUpperBound = 100s
**.host[*].udpApp[0].stopTime = -1s
**.host[*].udpApp[0].startTime = uniform(30s,35s)
**.host[*].udpApp[0].delayLimit = 5s
